plugins {

    id 'fabric-loom' version '0.5-SNAPSHOT'
    id "com.diluv.diluvgradle" version "1.3.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version

dependencies {

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {

    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
    
        expand "version": project.version
    }
}

java {

    withSourcesJar()
}

// Diluv Publishing
import com.diluv.diluvgradle.TaskDiluvUpload

task publishDiluv (type: TaskDiluvUpload) {

    // ======================
    // === REQUIRED STUFF ===
    // ======================
    
    // This token is used to authenticate with Diluv. It should be handled with the same
    // sensitivity and security as a password. This means you should never share this token
    // or upload it to a public location such as GitHub. These are commonly stored as secret
    // environmental variables. 
    token = findProperty('diluv_token');
    
    // This tells Diluv what project you are uploading the file to. You can find the ID for
    // any project on the Diluv Project Page. This is not considered secret or sensitive.
    projectId = findProperty('diluv_project');
    
    // Tells DiluvGradle what file to upload. This can be a Java file, a path to a file, or
    // certain tasks which produce files such as any AbstractArchiveTask.
    uploadFile = jar;
    
    // ======================
    // === OPTIONAL STUFF ===
    // ======================
    
    // Specifies the version of the file. This is auto-detected from Gradle's project.version
    // property if you do not specify this yourself.
    // setVersion('1.3.22');
    
    // Specifies game versions that the file is compatible with. DiluvGradle can auto-detect
    // detect this from ForgeGradle if you don't specify at least one version.
    // addGameVersion('1.12.2');
    
    // Specifies a changelog for your file. This can be hard coded or generated at build time.
    // setChangelog('The changelog string for your file.');
    
    // Relations between your file and other files on Diluv can be defined like this.
    // addDependency(projectId); - A project that your file requires.
    // addOptionalDependency(projectId); - A project that your file has additional support for.
    // addIncompatibility(projectId); - A project that your file is not compatible with.
    
    // Specifies a mod loader that your file is compatible with. When ForgeGradle is present
    // the loader 'forge' will be added by default. When Loom is present 'fabric' is added.
    // addLoader('loadername');
    
    // Defines the type of release this file is. This is 'alpha' by default.
    // Accepts 'alpha', 'beta', and 'release'.
    // setReleaseType('beta');
    
    // Changes the API URL that DiluvGradle uses to authenticate and upload the file to. This
    // is primarily intended for debugging.
    // apiURL = findProperty('diluv_api');
}